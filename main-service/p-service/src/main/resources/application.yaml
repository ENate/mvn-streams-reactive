server:
    port: 8082

logging:
    level:
        io:
            reflectoring: DEBUG
        org:
            springframework:
                data:
                    r2dbc: DEBUG

spring:
   webflux:
       base-path: /api

   r2dbc:
      url: r2dbc:postgresql://postgres_user:S3cret@localhost:5432/postgres_db

   jpa:
     properties:
       hibernate:
         dialect: org.hibernate.dialect.PostgreSQLDialect
       jdbc:
         lob:
           non_contextual_creation: true

     hibernate:
       ddl-auto: create-drop
# spring.r2dbc.url=r2dbc:postgresql://postgres:postgres@localhost:5432/postgres
# spring.r2dbc.pool.enabled=true
# spring.r2dbc.pool.initial-size=5
# spring.r2dbc.pool.max-size=10
# logging.level.org.springframework.r2dbc=DEBUG
# spring:
#   datasource:
#     url: jdbc:postgresql://localhost:5432/postgres_db
#     username: postgres_user
#     password: S3cret
resilience4j:
  circuitbreaker:
    instances:
      books:
        registerHealthIndicator: true
        event-consumer-buffer-size: 10
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true

#Resilience4J Timeout Properties
#resilience4j:
  timelimiter:
    instances:
      books:
        timeout-duration: 3s

#Resilience4J Retry Properties
  retry:
    instances:
      books:
        max-attempts: 3
        wait-duration: 5s    